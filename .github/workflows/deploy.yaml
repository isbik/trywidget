name: trywidget_workflow

on:
  pull_request:
    branches:
      - production

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 

      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Backend to Docker Hub
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./backend/
          push: true
          tags: trywidget/trywidget_backend:v1
      
      - name: Push Celery to Docker Hub
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./backend/
          file: ./backend/Dockerfile.celery
          push: true
          tags: trywidget/trywidget_celery:v1

      - name: Push Client to Docker Hub
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./client/
          push: true
          tags: trywidget/trywidget_client:v1
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          cd trywidget-master/devops/
          sudo docker compose stop
          sudo docker compose rm -f backend
          sudo docker compose rm -f client
          touch backend.env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> backend.env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> backend.env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> backend.env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> backend.env
          echo API_URL=${{ secrets.API_URL }} >> backend.env
          echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >> backend.env
          echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} >> backend.env
          echo CLIENT_URL=${{ secrets.CLIENT_URL }} >> backend.env
          touch client.env
          echo NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} >> client.env
          touch postgres.env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> postgres.env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> postgres.env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> postgres.env
          sudo docker-compose up -d
